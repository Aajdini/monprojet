package presentation;

import base.DepartementDao;
import base.EmployeDao;
import base.FonctionDao;
import domaine.Departement;
import domaine.Fonction;
import java.awt.Button;
import java.awt.Choice;
import java.awt.Color;
import java.awt.TextField;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import metier.ListeDepartements;
import metier.ListeFonctions;
/**
 * 634.1 Programmation - TP P01
 * 
 * Fenêtre de saisie d'un nouvel employé:
 * - Singleton
 * @
 * @author AJDINI Artrit
 * @
 */
public class FrmNouveau extends java.awt.Frame { 
    private static FrmNouveau uniqueInstance = null; /* Référence de l'unique instance */
    private FrmMain mainFrm; /* La référence de la fenêtre principale */
    private ListeFonctions listeFonctions;
    private ListeDepartements listeDepartements;
    private Fonction fonc;
    private Departement dept;
    
  /* Constructeur */
  public FrmNouveau () {
    initComponents();
    chargerFonctions();
    chargerDepartements();
    btnEnregistrer.setEnabled(false);

  } // Constructeur
  public static FrmNouveau getInstance (FrmMain mainFrm) {
    if (uniqueInstance == null) {uniqueInstance = new FrmNouveau();}
    uniqueInstance.mainFrm = mainFrm;
    return uniqueInstance;
  } // getInstance
  
   private void chargerFonctions () {
        listeFonctions = new ListeFonctions();
        for (int k = 0; k < listeFonctions.size(); k++) {
            Fonction f = listeFonctions.getFonction(k);
            chFonctions.add(f.getNomFonc());
        }
        if (listeFonctions.size() > 0) {listeFonctions.setPos(0);}
    } // chargerFonctions
   
    private void chargerDepartements () {
        listeDepartements = new ListeDepartements();
        for (int k = 0; k < listeDepartements.size(); k++) {
            Departement d = listeDepartements.getDepartement(k);
            chDepartements.add(d.getNomDept());
        }
        if (listeDepartements.size() > 0) {listeDepartements.setPos(0);}
    } // chargerDepartements
  
  private void checkerChamps(TextField champ0,TextField champ1,TextField champ2,Button btn){
    if(!champ0.getText().isEmpty() &&!champ1.getText().isEmpty() && !champ2.getText().isEmpty()){
          btn.setEnabled(true);
      }
      else{
          btn.setEnabled(false);
    }
  }//checkerChamps
  
  private boolean isValidDate(String str){
    SimpleDateFormat format = new SimpleDateFormat("dd.MM.yyyy");
    Date today = new Date();
    try {
        Date date = format.parse(str);
        boolean res = date.before(today);
        return res;     
    } catch (Exception e) {
        return false;
    }
  }//isValidDate
  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
   * content of this method is always regenerated by the Form Editor.
   */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        java.awt.Label label1 = new java.awt.Label();
        tfNom = new java.awt.TextField();
        java.awt.Label label2 = new java.awt.Label();
        tfPrenom = new java.awt.TextField();
        lblDateEngagement = new java.awt.Label();
        tfDateEngagement = new java.awt.TextField();
        java.awt.Label label4 = new java.awt.Label();
        chFonctions = new java.awt.Choice();
        java.awt.Label label5 = new java.awt.Label();
        chDepartements = new java.awt.Choice();
        btnEnregistrer = new java.awt.Button();

        setResizable(false);
        setTitle("Saisie d'un employé");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        label1.setText("Nom");

        tfNom.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                tfNomTextValueChanged(evt);
            }
        });

        label2.setText("Prénom");

        tfPrenom.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                tfPrenomTextValueChanged(evt);
            }
        });

        lblDateEngagement.setText("Date d'engagement");

        tfDateEngagement.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                tfDateEngagementTextValueChanged(evt);
            }
        });

        label4.setText("Fonction");

        label5.setText("Département");

        btnEnregistrer.setLabel("Enregistrer");
        btnEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnregistrerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfNom, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(tfPrenom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDateEngagement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfDateEngagement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chFonctions, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(chDepartements, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEnregistrer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDateEngagement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDateEngagement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chFonctions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chDepartements, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(btnEnregistrer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        dispose();
        mainFrm.chargerEmployes();
    }//GEN-LAST:event_formWindowClosing

    private void btnEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnregistrerActionPerformed
        for(int i = 0; i < listeFonctions.size(); i++){
                Fonction f = (Fonction)listeFonctions.getFonction(i);
                if(i == chFonctions.getSelectedIndex()){//possible car données dans le meme ordre (listeFonctions&chFonctions )
                    fonc = f;   
                }      
        }
        for(int i = 0; i < listeDepartements.size(); i++){
                Departement d = (Departement)listeDepartements.getDepartement(i);
                if(i == chDepartements.getSelectedIndex()){//possible car données dans le meme ordre (listeFonctions&chFonctions )
                    dept = d;
                }      
        }
        EmployeDao.ajouterEmploye(tfNom.getText(), tfPrenom.getText(), tfDateEngagement.getText(), fonc, dept);
    }//GEN-LAST:event_btnEnregistrerActionPerformed

    private void tfNomTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_tfNomTextValueChanged
       checkerChamps(tfDateEngagement,tfPrenom,tfNom,btnEnregistrer);
    }//GEN-LAST:event_tfNomTextValueChanged

    private void tfPrenomTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_tfPrenomTextValueChanged
       checkerChamps(tfDateEngagement,tfNom,tfPrenom,btnEnregistrer);
    }//GEN-LAST:event_tfPrenomTextValueChanged

    private void tfDateEngagementTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_tfDateEngagementTextValueChanged
       checkerChamps(tfDateEngagement,tfNom,tfPrenom,btnEnregistrer);
       if(!isValidDate(tfDateEngagement.getText())){
           lblDateEngagement.setForeground(Color.red);btnEnregistrer.setEnabled(false);;
       }
       else{lblDateEngagement.setForeground(Color.black);btnEnregistrer.setEnabled(true);}
    }//GEN-LAST:event_tfDateEngagementTextValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnEnregistrer;
    private java.awt.Choice chDepartements;
    private java.awt.Choice chFonctions;
    private java.awt.Label lblDateEngagement;
    private java.awt.TextField tfDateEngagement;
    private java.awt.TextField tfNom;
    private java.awt.TextField tfPrenom;
    // End of variables declaration//GEN-END:variables

} // FrmNouveau
